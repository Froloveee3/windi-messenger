services:
  db:
    image: postgres:15
    env_file: .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - db_data:/var/lib/postgresql/data

  test:
    build: .
    env_file: .env
    environment:
      - TESTING=1
      - POSTGRES_DB=${POSTGRES_TEST_DB}
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - /bin/bash
      - -c
      - |
        set -euo pipefail

        export PGPASSWORD="${POSTGRES_PASSWORD}"
        echo "üïë –∂–¥—ë–º Postgres‚Ä¶"
        until pg_isready -h db -U "${POSTGRES_USER}"; do sleep 1; done

        echo "üì¶ —Å–æ–∑–¥–∞—ë–º/–ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É ${POSTGRES_TEST_DB}‚Ä¶"
        psql -h db -U "${POSTGRES_USER}" -d postgres -tAc \
          "SELECT 1 FROM pg_database WHERE datname='${POSTGRES_TEST_DB}'" \
          | grep -q 1 || createdb -h db -U "${POSTGRES_USER}" "${POSTGRES_TEST_DB}"
        
        echo "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é –ë–î‚Ä¶"
        export DATABASE_URL="postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_TEST_DB}"

        alembic upgrade head

        echo "‚úÖ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º pytest"
        exec pytest -v tests
    volumes:
      - .:/app

  web:
    build: .
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      test:
        condition: service_completed_successfully
    ports:
      - '8000:8000'
    volumes:
      - .:/app

volumes:
  db_data:
